name: Release

on:
  push:
    tags:
      - 'v*'

concurrency: release

jobs:

  release_notes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous release tag
        id: get_previous_release_tag
        run: |
          PREVIOUS_RELEASE_TAG=$(git tag --sort=-version:refname --merged | grep -E '^v([[:digit:]]+\.){2}[[:digit:]]+$' | grep -v "$(git describe --tags)" | head -1)
          echo "previous_release_tag=$PREVIOUS_RELEASE_TAG" >> $GITHUB_OUTPUT
      - name: Generate Release Notes
        uses: enonic/release-tools/generate-changelog@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIOS_RELEASE_TAG: ${{ steps.get_previous_release_tag.outputs.previous_release_tag }}
          OUTPUT_FILE: changelog.md

      - uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: changelog.md

  build:
    runs-on: ubuntu-latest

    needs: release_notes

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - uses: actions/setup-node@v4
        with:
            node-version: '20.x'
            registry-url: 'https://registry.npmjs.org'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get publishing variables
        id: publish_vars
        uses: enonic/release-tools/publish-vars@master
        env:
          PROPERTIES_PATH: './gradle.properties'

      - name: Verify release version
        if: steps.publish_vars.outputs.release != 'true'
        run: exit 1

      - name: Publish to Artifactory
        run: ./gradlew publish -Pcom.enonic.xp.app.production=true -PrepoKey=${{ steps.publish_vars.outputs.repo }} -PrepoUser=${{ secrets.ARTIFACTORY_USERNAME }} -PrepoPassword=${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: Publish to NPM
        run: npm publish
        working-directory: types
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Download changelog
        uses: actions/download-artifact@v3
        with:
          name: changelog

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish_vars.outputs.tag_name }}
          body_path: changelog.md
          release_name: Guillotine ${{ steps.publish_vars.outputs.version }}
          prerelease: ${{ steps.publish_vars.outputs.prerelease == 'true' }}
